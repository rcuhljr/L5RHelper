High Level happy path user case example.

Bob starts L5R Helper.
Bob chooses to Load Existing character.
Bob selects Toki from the list of his characters.
Bob see's toki's stats, A box with 'free raises' filled with a '2', misc bonus with a '0' a Target number window, a dropdown box populated with 'Katana', 'Wak', 'Obsidian Knife' 
A confidence window prefilled with '95%'  an unchecked 'use luck' checkbox and a Spend Void window with a '0' in it.
On the bottom half of the screen are a series of boxes under the heading 'Templates' labeled "Opponent Missed", "Sozen Str/Agi +5" and
 "Add New Template" all unselected.  Bob selects Opponent Missed template and the free raises box changes from '2' to '6'.
 Bob enters 55 for Target Tn and hits calculate. The program pops up that '5 raises can be called with a 95% chance of hitting' Bob presses Ok and is returned to
 the previous screen.





AppMainScreen
    Load Existing
    
    Create New
    
    Manage Characters (namely deletion for now) Or make this part of loaded character screen.
    
    <Further functionality, share characters over bluetooth?>
    
    
Create New ->
    Prompt for Name (20 characters) Default View (combat or casting)
        Collect attributes. Do we want to collect weapon skills if they selected casting at this time? get spellcasting skill and emphasis.
        Do We want to keep track of techniques or let users handle that? Weapon quality?
        When Complete, Load character
                
Load Existing -> 
    Display list of profile names. 
    
Character Created or Loaded ->
    See Use Case, will fill out later.
    
    
DB Schema - Profiles are one per character they store baseline stats and skills. There are Many to one templates to profiles. 
A template is a set of bonuses/penalties that can be used to represent changes in combat. (I'm going slower then someone, or perhaps if I have a shuggie stat buff)
Profiles
    NOT NULL
    oid number(10)
    name varchar(20)
    defaultViewId number(10)
    luck boolean
    GP boolean
    NULLABLE
    Earth Ring, Water Ring, Fire Ring, Air Ring, Void Ring, Reflexes, Agility number(4) (strength needs added if max damage is ever a concern.)
    Link to a weapons Table which has multiple entries recording name, skill, and emphasis boolean.
DefaultViews
    NOT NULL
    oid number(10)
    name varchar(20)
WeaponSkills
    NOT NULL
    
Templates
    NOT NULL
    oid
    profileId
    NULLABLE
    Earth Ring, Water Ring, Fire Ring, Air Ring, Strength, Agility number(4)
    weapon skill modifier(rare?)
    rolled dice
    kept dice
    Others?
    
    
#TODO
    setup state maintenance to handle sleeping/suspending. from http://developer.android.com/reference/android/app/Activity.html#SavingPersistentState
    "any edits a user makes are effectively made immediately without requiring an additional confirmation step. 
     Supporting this model is generally a simple matter of following two rules:
      
      When creating a new document, the backing database entry or file for it is created immediately. 
      For example, if the user chooses to write a new e-mail, a new entry for that e-mail is created as soon 
      as they start entering data, so that if they go to any other activity after that point this e-mail will
      now appear in the list of drafts.
      
      When an activity's onPause() method is called, it should commit to the backing content provider or file any
      changes the user has made. This ensures that those changes will be seen by any other activity that is about 
      to run. You will probably want to commit your data even more aggressively at key times during your activity's
      lifecycle: for example before starting a new activity, before finishing your own activity, when the user switches 
      between input fields, etc."

    